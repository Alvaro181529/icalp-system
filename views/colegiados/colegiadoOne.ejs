<%- include('../partials/header', { title, user }) %>
  <div class="bg-[#2C3E8C] mt-2 mx-8 py-10 px-16 rounded-lg text-white">


    <div class="w-full">
      <div class="flex justify-between ">
        <h1 class="font-semibold text-3xl">Perfil</h1>
        <div>
          <button class="bg-blue-600 py-2 px-6 rounded hover:bg-blue-500 focus:ring-2" id="button">Pagos</button>
          <button class="bg-blue-600 py-2 px-6 rounded hover:bg-blue-500 focus:ring-2"
            id="openDialogButton">Actualizar</button>
          <button class="bg-blue-600 py-2 px-6 rounded hover:bg-blue-500 focus:ring-2 disabled:bg-gray-600"
            id="entrega-agenda">Entrega de Agenda</button>
          <button class="bg-blue-600 py-2 px-6 rounded hover:bg-blue-500 focus:ring-2 disabled:bg-gray-600"
            id="diplomado-gratuito">Diplomado Gratuito</button>
          <a href="/collegiate/<%= result.ColegiadoId %>/pdf" target="_blank">
            <button class="bg-blue-600 py-2 px-6 rounded hover:bg-blue-500 focus:ring-2">Generar Reporte PDF</button>
          </a>
        </div>
      </div>
      <hr class="my-4">
      <div class="flex flex-col md:flex-row gap-6">
        <!-- Profil+e Image Section -->
        <div class="flex flex-col items-center">
          <div class="w-64 h-64 rounded-full overflow-hidden border-4 border-white mx-8">
            <img src="<%= result.Foto ? '/uploads/imagenes/' + result.Foto : '/public/img/imageDefault1 .png' %>"
              alt="<%= result.Nombres %><%= result.Paterno %><%= result.Materno %>"
              class="w-full h-full object-cover" />
          </div>
        </div>

        <!-- Profile Information Section -->
        <div class="flex-1">

          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <h1 class="text-2xl font-bold mb-4 uppercase">
                <%= result.Nombres %>
                  <%= result.Paterno %>
                    <%= result.Materno %>
              </h1>
              <div class="mb-4">
                <p class="text-gray-300">Email:</p>
                <p>
                  <%=result.correo || 'Sin correo proporcionado' %>
                </p>
              </div>

              <div class="mb-4">
                <p class="text-gray-300">Dirección de oficina:</p>
                <p>
                  <%= result.DireccionOficina %>
                </p>
              </div>

              <div class="mb-4">
                <p class="text-gray-300">Fecha de nacimiento:</p>
                <p>
                  <%= result.FechaNacimiento ? new Date(result.FechaNacimiento).toLocaleDateString() : "No disponible"
                    %>
                </p>
              </div>

              <div class="mb-4">
                <p class="text-gray-300">Matrícula:</p>
                <p>
                  <%= result.Matricula.toString().padStart(5, "0" )%>
                </p>
              </div>
            </div>

            <div>
              <div class="mb-4">
                <p class="text-gray-300">Numero de telefono:</p>
                <p>
                  <%= result.TelefonoDomicilio %>
                </p>
              </div>

              <div class="mb-4">
                <p class="text-gray-300">Telefono de oficina:</p>
                <p>
                  <%= result.TelefonoOficina%>
                </p>
              </div>

              <div class="mb-4">
                <p class="text-gray-300">Lugar de nacimiento:</p>
                <p>
                  <%= result.LugarNacimiento %>
                </p>
              </div>

              <div class="mb-4">
                <p class="text-gray-300">Numero de C.I.:</p>
                <p>
                  <%= result.NumeroCI %>
                </p>
              </div>

              <div class="mb-4">
                <p class="text-gray-300">Cuotas:</p>
                <p class="flex items-center">
                  <span class="w-2 h-2 bg-green-400 rounded-full mr-2"></span>
                  Al día
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <table>
      <thead>
        <tr>
          <th>Campo</th>
          <th>Valor</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>Matricula</td>
          <td>
            <%= result.Matricula %>
          </td>
        </tr>
        <tr>
          <td>Matricula Conalab</td>
          <td>
            <%= result.MatriculaConalab || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Foto</td>
          <td><img src="" alt="<%= result.Foto %>" width="100"></td>
        </tr>
        <tr>
          <td>Firma</td>
          <td><img src="#" alt="<%= result.Firma %>" width="100"></td>
        </tr>
        <tr>
          <td>PDF</td>
          <td><a href="#"" target=" _blank">Ver PDF <%= result.Pdf %>"</a></td>
        </tr>
        <tr>
          <td>Nombre Completo</td>
          <td>
            <%= result.Nombres %>
              <%= result.Paterno %>
                <%= result.Materno %>
          </td>
        </tr>
        <tr>
          <td>Teléfono Oficina</td>
          <td>
            <%= result.TelefonoOficina %>
          </td>
        </tr>
        <tr>
          <td>Dirección Oficina</td>
          <td>
            <%= result.DireccionOficina %>
          </td>
        </tr>
        <tr>
          <td>Correo</td>
          <td>
            <%= result.Correo || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Lugar de Nacimiento</td>
          <td>
            <%= result.LugarNacimiento %>
          </td>
        </tr>
        <tr>
          <td>Fecha de Nacimiento</td>
          <td>
            <%= result.FechaNacimiento ? new Date(result.FechaNacimiento).toLocaleDateString() : "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Numero CI</td>
          <td>
            <%= result.NumeroCI %>
          </td>
        </tr>
        <tr>
          <td>Numero RUC</td>
          <td>
            <%= result.NumeroRuc %>
          </td>
        </tr>
        <tr>
          <td>Estado Civil</td>
          <td>
            <%= result.EstadoCivil %>
          </td>
        </tr>
        <tr>
          <td>Universidad</td>
          <td>
            <%= result.Universidad %>
          </td>
        </tr>
        <tr>
          <td>Fecha Tesis</td>
          <td>
            <%= result.FechaTesis || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Universidad Licenciatura</td>
          <td>
            <%= result.UniversidadLicenciatura %>
          </td>
        </tr>
        <tr>
          <td>Fecha Licenciatura</td>
          <td>
            <%= result.FechaLicenciatura ? new Date(result.FechaLicenciatura).toLocaleDateString() : "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Fecha Provision Nacional</td>
          <td>
            <%= result.FechaProvisionNacional ? new Date(result.FechaProvisionNacional).toLocaleDateString()
              : "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Entidad Provision Nacional</td>
          <td>
            <%= result.EntidadProvisionNacional %>
          </td>
        </tr>
        <tr>
          <td>Fecha Matriculación al Colegio</td>
          <td>
            <%= result.FechaMatriculacionAlColegio ? new Date(result.FechaMatriculacionAlColegio).toLocaleDateString()
              : "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Cargos Administración Pública</td>
          <td>
            <%= result.CargosAdministracionPublica %>
          </td>
        </tr>
        <tr>
          <td>Cargos Empresa Privada</td>
          <td>
            <%= result.CargosEmpresaPrivada %>
          </td>
        </tr>
        <tr>
          <td>Cargos Bufete</td>
          <td>
            <%= result.CargosBufete || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Cargo Actual</td>
          <td>
            <%= result.CargoActual %>
          </td>
        </tr>
        <tr>
          <td>Especialidad Primaria</td>
          <td>
            <%= result.EspecialidadPrimaria || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Especialidad Secundaria</td>
          <td>
            <%= result.EspecialidadSecundaria %>
          </td>
        </tr>
        <tr>
          <td>Producciones</td>
          <td>
            <%= result.Producciones || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Cátedra</td>
          <td>
            <%= result.Catedra %>
          </td>
        </tr>
        <tr>
          <td>Estudios Especialización</td>
          <td>
            <%= result.EstudiosEspecializacion %>
          </td>
        </tr>
        <tr>
          <td>Reconocimientos</td>
          <td>
            <%= result.Reconocimientos || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Asistencia a Eventos Internacionales</td>
          <td>
            <%= result.AsistenciaEventosInternacionales %>
          </td>
        </tr>
        <tr>
          <td>Institución Asegurado</td>
          <td>
            <%= result.InstitucionAsegurado %>
          </td>
        </tr>
        <tr>
          <td>Beneficiarios</td>
          <td>
            <%= result.Beneficiarios || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Dirección Domicilio</td>
          <td>
            <%= result.DireccionDomicilio %>
          </td>
        </tr>
        <tr>
          <td>Teléfono Domicilio</td>
          <td>
            <%= result.TelefonoDomicilio %>
          </td>
        </tr>
        <tr>
          <td>Casilla</td>
          <td>
            <%= result.Casilla || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Situación</td>
          <td>
            <%= result.Situacion || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Observación</td>
          <td>
            <%= result.Observacion || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Zona Id</td>
          <td>
            <%= result.ZonaId || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Nacionalidad</td>
          <td>
            <%= result.Nacionalidad || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Celular</td>
          <td>
            <%= result.Celular || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Grado Académico</td>
          <td>
            <%= result.GradoAcademico || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Licenciatura</td>
          <td>
            <%= result.Licenciatura || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Zona Trabajo Id</td>
          <td>
            <%= result.ZonaTrabajoId || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Forma de Pago</td>
          <td>
            <%= result.FormaDePago || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Boleta Depósito Número</td>
          <td>
            <%= result.BoletaDepositoNumero || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Monto Depósito</td>
          <td>
            <%= result.MontoDeposito || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Formulario de Admisión</td>
          <td>
            <%= result.FormularioDeAdmision || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Fotocopia Título Profesional</td>
          <td>
            <%= result.FotocopiaTituloProfesional || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Certificado Nacimiento Original</td>
          <td>
            <%= result.CertificadoNacimientoOriginal || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Fotocopia CI</td>
          <td>
            <%= result.FotocopiaCI || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Currículum Vitae</td>
          <td>
            <%= result.CurriculumVitae || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Usuario Registro</td>
          <td>
            <%= result.UsuarioRegistro || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Fecha Registro</td>
          <td>
            <%= result.FechaRegistro ? new Date(result.FechaRegistro).toLocaleDateString() : "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Usuario Modificación</td>
          <td>
            <%= result.UsuarioModificacion || "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Fecha Modificación</td>
          <td>
            <%= result.FechaModificacion ? new Date(result.FechaModificacion).toLocaleDateString() : "No disponible" %>
          </td>
        </tr>
        <tr>
          <td>Estado</td>
          <td>
            <%= result.Estado %>
          </td>
        </tr>
      </tbody>
    </table>
    
    <h1 class="font-semibold text-3xl mt-8">Aportes</h1>
    <hr class="my-2">
    <div class="overflow-x-auto shadow-md sm:rounded-lg bg-gray-100 ml-8">
      <table id="result-table" class="w-full text-sm text-left rtl:text-right text-gray-800 ">
        <thead class="text-xs text-gray-200 uppercase bg-gray-300 ">
          <tr class="text-gray-800">
            <th class="px-4 py-3">Matricula</th>
            <th class="px-4 py-3">Fechas</th>
            <th class="px-4 py-3">Monto</th>
            <th class="px-4 py-3"></th>
          </tr>
        </thead>
        <tbody>
          <!-- Aquí se llenarán las filas con los resultados -->
        </tbody>
      </table>
    </div>
    <h1 class="font-semibold text-3xl mt-8">Notas</h1>
    <hr class="my-2">
    <div class="overflow-x-auto shadow-md sm:rounded-lg bg-gray-100 ml-8">
      <table id="notas-table" class="w-full text-sm text-left rtl:text-right text-gray-800 ">
        <thead class="text-xs text-gray-200 uppercase bg-gray-300 ">
          <tr class="text-gray-800">
            <th class="px-4 py-3">Fecha</th>
            <th class="px-4 py-3">Nota</th>
            <th class="px-4 py-3">Usuario</th>
          </tr>
        </thead>
        <tbody>
          <!-- Aquí se llenarán las filas con los resultados -->
        </tbody>
      </table>
    </div>
    <dialog id="personalDataDialog">
      <h2>Formulario de Registros</h2>
      <form id="personalDataForm">
        <h3>Datos personales</h3>
        <label for="matricula">Matrícula:</label>
        <input type="text" id="matricula" name="matricula" value="<%=result.Matricula%>">

        <label for="matriculaConalab">Matrícula Conalab:</label>
        <input type="text" id="matriculaConalab" name="matriculaConalab" value="<%=result.matriculaConalab%>">

        <label for="nombres">Nombres:</label>
        <input type="text" id="nombres" name="nombres" value="<%=result.Nombres%>">

        <label for="paterno">Apellido Paterno:</label>
        <input type="text" id="paterno" name="paterno" value="<%=result.Paterno%>">

        <label for="materno">Apellido Materno:</label>
        <input type="text" id="materno" name="materno" value="<%=result.Materno%>">

        <label for="telefonoOficina">Teléfono Oficina:</label>
        <input type="tel" id="telefonoOficina" name="telefonoOficina" value="<%=result.TelefonoOficina%>">

        <label for="direccionOficina">Dirección Oficina:</label>
        <input type="text" id="direccionOficina" name="direccionOficina" value="<%=result.DireccionOficina%>">

        <label for="correo">Correo:</label>
        <input type="email" id="correo" name="correo" value="<%=result.Correo%>">

        <label for="lugarNacimiento">Lugar de Nacimiento: </label>
        <input type="text" id="lugarNacimiento" name="lugarNacimiento" value="<%=result.LugarNacimiento%>">

        <label for="fechaNacimiento">Fecha de Nacimiento:</label>
        <input type="date" id="fechaNacimiento" name="fechaNacimiento"
          value="<%= result.FechaNacimiento ? new Date(result.FechaNacimiento).toISOString().split('T')[0] : '' %>">

        <label for="numeroCI">Número CI:</label>
        <input type="text" id="numeroCI" name="numeroCI" value="<%=result.NumeroCI%>">

        <label for="numeroRuc">Número RUC:</label>
        <input type="text" id="numeroRuc" name="numeroRuc" value="<%=result.NumeroRuc%>">

        <label for="estadoCivil">Estado Civil:</label>
        <select id="estadoCivil" name="estadoCivil" value="<%=result.EstadoCivil%>">
          <option value="soltero">Soltero</option>
          <option value="casado">Casado</option>
          <option value="divorciado">Divorciado</option>
          <option value="viudo">Viudo</option>
        </select>
        <h3>Estudios</h3>
        <label for="universidad">Universidad:</label>
        <input type="text" id="universidad" name="universidad" value="<%=result.Universidad%>">

        <label for="fechaTesis">Fecha Tesis: MM/DD/AAAA</label>
        <input type="text" id="fechaTesis" name="fechaTesis" value="<%= result.FechaTesis %>" placeholder="MM/DD/AAAA">


        <label for="universidadLicenciatura">Universidad Licenciatura: MM/DD/AAAA</label>
        <input type="text" id="universidadLicenciatura" name="universidadLicenciatura" placeholder="MM/DD/AAAA"
          value="<%=result.UniversidadLicenciatura%>">

        <label for="fechaLicenciatura">Fecha Licenciatura:</label>
        <input type="text" id="fechaLicenciatura" name="fechaLicenciatura" value="<%=result.FechaLicenciatura%>">

        <label for="fechaProvisionNacional">Fecha Provisión Nacional:</label>
        <input type="date" id="fechaProvisionNacional" name="fechaProvisionNacional"
          value="<%=result.FechaProvisionNacional ? new Date(result.FechaProvisionNacional).toISOString().split('T')[0] : ''%>">

        <label for="entidadProvisionNacional">Entidad Provisión Nacional:</label>
        <input type="text" id="entidadProvisionNacional" name="entidadProvisionNacional"
          value="<%=result.EntidadProvisionNacional%>">

        <label for="fechaMatriculacionAlColegio">Fecha Matriculación al Colegio:</label>
        <input type="date" id="fechaMatriculacionAlColegio" name="fechaMatriculacionAlColegio"
          value="<%=result.FechaMatriculacionAlColegio ? new Date(result.FechaMatriculacionAlColegio).toISOString().split('T')[0] : ''%>">
        <h3>Cargos Desempeñados</h3>
        <label for="cargosAdministracionPublica">Cargos Administración Pública:</label>
        <input id="cargosAdministracionPublica" name="cargosAdministracionPublica"
          value="<%=result.CargosAdministracionPublica%>"></input>

        <label for="cargosEmpresaPrivada">Cargos Empresa Privada:</label>
        <input id="cargosEmpresaPrivada" name="cargosEmpresaPrivada" value="<%=result.CargosEmpresaPrivada%>"></input>

        <label for="cargosBufete">Cargos Bufete:</label>
        <input id="cargosBufete" name="cargosBufete" value="<%=result.CargosBufete%>"></input>

        <label for="cargoActual">Cargo Actual:</label>
        <input type="text" id="cargoActual" name="cargoActual" value="<%=result.CargoActual%>">

        <label for="especialidadPrimaria">Especialidad Primaria:</label>
        <input type="text" id="especialidadPrimaria" name="especialidadPrimaria"
          value="<%=result.EspecialidadPrimaria%>">

        <label for="especialidadSecundaria">Especialidad Secundaria:</label>
        <input type="text" id="especialidadSecundaria" name="especialidadSecundaria"
          value="<%=result.EspecialidadSecundaria%>">

        <label for="producciones">Producciones:</label>
        <input id="producciones" name="producciones" value="<%=result.Producciones%>"></input>

        <label for="catedra">Cátedra:</label>
        <input id="catedra" name="catedra" value="<%=result.Catedra%>"></input>

        <label for="estudiosEspecializacion">Estudios de Especialización:</label>
        <input id="estudiosEspecializacion" name="estudiosEspecializacion"
          value="<%=result.EstudiosEspecializacion%>"></input>

        <label for="reconocimientos">Reconocimientos:</label>
        <input id="reconocimientos" name="reconocimientos" value="<%=result.Reconocimientos%>"></input>

        <label for="asistenciaEventosInternacionales">Asistencia a Eventos Internacionales:</label>
        <input id="asistenciaEventosInternacionales" name="asistenciaEventosInternacionales"
          value="<%=result.AsistenciaEventosInternacionales%>"></input>
        <h3>Otros</h3>
        <label for="institucionAsegurado">Institución Asegurado:</label>
        <input type="text" id="institucionAsegurado" name="institucionAsegurado"
          value="<%=result.InstitucionAsegurado%>">

        <label for="beneficiarios">Beneficiarios:</label>
        <input id="beneficiarios" name="beneficiarios" value="<%=result.Beneficiarios%>"></input>

        <label for="direccionDomicilio">Dirección Domicilio:</label>
        <input type="text" id="direccionDomicilio" name="direccionDomicilio" value="<%=result.DireccionDomicilio%>">

        <label for="telefonoDomicilio">Teléfono Domicilio:</label>
        <input type="tel" id="telefonoDomicilio" name="telefonoDomicilio" value="<%=result.TelefonoDomicilio%>">

        <label for="casilla">Casilla:</label>
        <input type="text" id="casilla" name="casilla" value="<%=result.Casilla%>">

        <label for="situacion">Situación:</label>
        <input type="text" id="situacion" name="situacion" value="<%=result.Situación%>">

        <label for="observacion">Observación:</label>
        <input id="observacion" name="observacion" value="<%=result.Observacion%>"></input>

        <label for="zona">Zona:</label>
        <input type="text" id="zona" name="zona">

        <label for="nacionalidad">Nacionalidad:</label>
        <input type="text" id="nacionalidad" name="nacionalidad" value="<%=result.Nacionalidad%>">

        <label for="celular">Celular:</label>
        <input type="tel" id="celular" name="celular" value="<%=result.Celular%>">

        <label for="gradoAcademico">Grado Académico:</label>
        <input type="text" id="gradoAcademico" name="gradoAcademico" value="<%=result.GradoAcademico%>">

        <label for="licenciatura">Licenciatura:</label>
        <input type="text" id="licenciatura" name="licenciatura" value="<%=result.Licenciatura%>">

        <label for="zonaTrabajo">Zona de Trabajo:</label>
        <input type="text" id="zonaTrabajo" name="zonaTrabajo" value="<%=result.ZonaTrabajoId%>">

        <label for="formaDePago">Forma de Pago:</label>
        <select id="formaDePago" name="formaDePago" value="<%=result.FormaDePago%>">
          <option value="efectivo">Efectivo</option>
          <option value="cheque">Cheque</option>
          <option value="transferencia">Transferencia</option>
        </select>

        <label for="boletaDepositoNumero">Boleta Depósito Número:</label>
        <input type="text" id="boletaDepositoNumero" name="boletaDepositoNumero"
          value="<%=result.BoletaDepositoNumero%>">

        <label for="montoDeposito">Monto Depósito:</label>
        <input type="number" id="montoDeposito" name="montoDeposito" value="<%=result.MontoDeposito%>" step="0.01">

        <label for="formularioAdmision">Formulario de Admisión:</label>
        <input type="text" id="formularioAdmision" name="formularioAdmision" value="<%=result.FormularioAdmision%>">

        <label for="fotocopiaTituloProfesional">Fotocopia Título Profesional:</label>
        <input type="text" id="fotocopiaTituloProfesional" name="fotocopiaTituloProfesional"
          value="<%=result.FotocopiaTituloProfesional%>">

        <label for="certificadoNacimientoOriginal">Certificado Nacimiento Original:</label>
        <input type="text" id="certificadoNacimientoOriginal" name="certificadoNacimientoOriginal"
          value="<%=result.CertificadoNacimientoOriginal%>">

        <label for="fotocopiaCI">Fotocopia C.I.:</label>
        <input type="text" id="fotocopiaCI" name="fotocopiaCI" value="<%=result.FotocopiaCI%>">

        <label for="curriculumVitae">Curriculum Vitae:</label>
        <input type="text" id="curriculumVitae" name="curriculumVitae" value="<%=result.CurriculumVitae%>">
        <label for="estado">Estado:</label>
        <select name="estado" id="" value="<%=result.Estado%>">
          <option value="">Activos</option>
          <option value="">Inactivos</option>
        </select>
        <button type="submit">Enviar</button>
        <button type="button" id="closeDialogButton">Cerrar</button>
      </form>
    </dialog>

    <dialog id="dialog-aporte">
      <h2>Hola</h2>
      <label for="" id="label"></label>
      <form id="form-aporte" action="">
        <label for="motivo">Motivo</label>
        <input type="text" id="motivo" name="motivo" placeholder="Motivo">
        <button type="reset" id="cancelar-aporte">Cancelar</button>
        <button id="button-aporte">Confirmar</button>
      </form>
    </dialog>
    <dialog id="dialog">
      <h3>Pagos</h3>
      <form id="form-create" method="POST">
        <label for="meses">Meses</label>
        <input type="text" id="meses" name="meses" value="1" disabled>

        <% const anoActual=2050; const inicioAno=1990; %>

          <label for="fechaInicial">Desde:</label>
          <select id="mesInicial" name="mesInicial">
            <option value="1">Enero</option>
            <option value="2">Febrero</option>
            <option value="3">Marzo</option>
            <option value="4">Abril</option>
            <option value="5">Mayo</option>
            <option value="6">Junio</option>
            <option value="7">Julio</option>
            <option value="8">Agosto</option>
            <option value="9">Septiembre</option>
            <option value="10">Octubre</option>
            <option value="11">Noviembre</option>
            <option value="12">Diciembre</option>
          </select>

          <select id="anoInicial" name="anoInicial">
            <% for (let ano=inicioAno; ano <=anoActual; ano++) { %>
              <option value="<%= ano %>" <%=ano===anoActual ? 'selected' : '' %>><%= ano %>
              </option>
              <% } %>
          </select>

          <label for="fechaFinal">Hasta:</label>
          <select id="mesFinal" name="mesFinal">
            <option value="1">Enero</option>
            <option value="2">Febrero</option>
            <option value="3">Marzo</option>
            <option value="4">Abril</option>
            <option value="5">Mayo</option>
            <option value="6">Junio</option>
            <option value="7">Julio</option>
            <option value="8">Agosto</option>
            <option value="9">Septiembre</option>
            <option value="10">Octubre</option>
            <option value="11">Noviembre</option>
            <option value="12">Diciembre</option>
          </select>

          <select id="anoFinal" name="anoFinal">
            <% for (let ano=inicioAno; ano <=anoActual; ano++) { %>
              <option value="<%= ano %>" <%=ano===anoActual ? 'selected' : '' %>><%= ano %>
              </option>
              <% } %>
          </select>

          <label for="recibo">Numero de recibo</label>
          <input id="recibo" type="number" name="recibo">

          <label for="talonario">Numero de talonario</label>
          <input id="talonario" type="number" name="talonario">

          <label for="fechaDeCobro">Fecha de cobro</label>
          <input type="date" id="fechaDeCobro" name="fechaDeCobro"
            value="<%= new Date().toISOString().split('T')[0] %>">

          <label for="monto">Monto</label>
          <input id="monto" type="number" name="monto" value="20">

          <label for="observacion">Observacion</label>
          <input id="observacion" type="text" name="observacion">

          <button type="submit">Registrar</button>
          <span id="error-message"></span>
      </form>

    </dialog>

  </div>

  <script defer>
    document.addEventListener("DOMContentLoaded", function () {

      const mesInicial = $('#mesInicial');
      const anoInicial = $('#anoInicial');
      const mesFinal = $('#mesFinal');
      const anoFinal = $('#anoFinal');
      const inputMeses = $('#meses');
      const pagoAporte = $('#form-create');
      const actualizacionUsuario = $('#personalDataForm');
      const agendaEntrega = $('#entrega-agenda')
      const diplomadoGratuito = $('#diplomado-gratuito')
      const dialogAportes = $('#dialog-aporte');
      const resultTableBody = $("#result-table tbody");
      const resultTableBodyNotas = $("#notas-table tbody");
      const formAporte = $("#form-aporte");
      const motivoText = $("#motivo");
      const cancelarAporte = $("#cancelar-aporte");
      const pathname = window.location.pathname;  // Ejemplo: "/item/554"
      const parts = pathname.split("/");
      const userId = parts[parts.length - 1];
      const fetchNotas = async () => {
        const url = `/notas/${userId}`;
        try {
          const response = await fetch(url);
          if (!response.ok) {
            throw new Error("Error al obtener los datos");
          }
          const res = await response.json();
          resultTableBodyNotas.innerHTML = '';
          if (Array.isArray(res.data) && res.data.length > 0) {
            res.data.forEach(item => {
              const fecha = new Date(item.Fecha);
              const anoItem = fecha.getFullYear(); // Obtener el año de `item.Fecha`
              const anoActual = new Date().getFullYear(); // Obtener el año actual
              if ((item.Identificador == "Agenda" || item.Identificador == "Nota") && anoItem === anoActual) {
                agendaEntrega.disabled = true; // Desactivar el botón si las condiciones se cumplen
              }
              if (item.Identificador == "Diplomado" || item.Identificador == "DiplomadoGratuito") {
                diplomadoGratuito.disabled = true; // Desactivar el botón si las condiciones se cumplen
              }
              const fechaFormateada = fecha.toLocaleDateString("es-ES", {
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric'
              });
              const horaFormateada = fecha.toLocaleTimeString("es-ES", {
                hour: '2-digit',
                minute: '2-digit',
                hour12: true
              });
              const row = document.createElement("tr");
              row.innerHTML = `
              <td class="px-4 py-3">
                <p>${fechaFormateada} - ${horaFormateada}</p>
              </td>
              <td class="px-4 py-3">
                <p>${item.Nota}</p>
              </td>
              <td class="px-4 py-3">
                <p>Registrado por: ${item.Usuario}</p>
              </td>
            `;
              resultTableBodyNotas.appendChild(row);
            });
          } else {
            const row = document.createElement("tr");
            row.innerHTML = `<td colspan="4">No se encontraron resultados</td>`;
            resultTableBodyNotas.appendChild(row);
          }
        } catch (error) {
          console.error("Hubo un problema con la solicitud fetch:", error);
          alert("Hubo un error al obtener los datos. Intenta de nuevo.");
        }
      }
      // Función para obtener los datos de los aportes
      const fetchData = async () => {
        const url = `/contributions/${userId}`;

        try {
          const response = await fetch(url);
          if (!response.ok) {
            throw new Error("Error al obtener los datos");
          }
          const res = await response.json();
          resultTableBody.innerHTML = '';
          if (Array.isArray(res) && res.length > 0) {
            res.forEach(item => {
              const fechaDeCobro = new Date(item.FechaDeCobro);

              const fechaFormateada = fechaDeCobro.toLocaleDateString("es-ES", {
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric'
              });
              const horaFormateada = fechaDeCobro.toLocaleTimeString("es-ES", {
                hour: '2-digit',
                minute: '2-digit',
                hour12: true
              });

              const row = document.createElement("tr");
              row.innerHTML = `
              <td class="px-4 py-3">
                <p>T.- ${item.Talonario || 0} - ${item.Recibo || 0}</p>
                ${item.Matricula.toString().padStart(5, "0")}
                <p>${item.Cobrador}</p>
                <p><strong>Fecha: </strong>${fechaFormateada}</p>
                <p><strong>Hora:</strong> ${horaFormateada}</p>
                <p>${item.Observacion ?? "S/O"}</p>
              </td>
              <td class="px-4 py-3">
                <p>${item.FechaInicial} - ${item.FechaFinal}</p>
                <p><strong>${item.MesesPagados}</strong> Meses</p>
              </td>
              <td class="px-4 py-3">
                <p>${item.Monto}</p>
                <p style='color:crimson'>${item.Faltante}</p>
              </td>
              <td class="px-4 py-3">
                <button class="actualizar-button px-6 py-2 bg-red-600 rounded-md hover:bg-red-400 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50 text-white" data-id="${item.AporteId}">Anular</button>
              </td>
            `;
              resultTableBody.appendChild(row);
            });
          } else {
            const row = document.createElement("tr");
            row.innerHTML = `<td colspan="4">No se encontraron resultados</td>`;
            resultTableBody.appendChild(row);
          }
        } catch (error) {
          console.error("Hubo un problema con la solicitud fetch:", error);
          alert("Hubo un error al obtener los datos. Intenta de nuevo.");
        }
      };

      // Manejar el evento de clic en el botón "Editar"
      resultTableBody.addEventListener('click', async (e) => {
        const button = e.target;
        const AporteId = button.getAttribute('data-id');

        if (button.classList.contains('actualizar-button')) {
          await handleUserAporteUpdate(AporteId);
        }
      });
      pagoAporte.addEventListener('submit', async (e) => {
        e.preventDefault(); // Prevent the form from submitting the default way

        // Create a FormData object from the form
        const formData = new FormData(pagoAporte);
        // Build an object from the FormData
        const data = {
          colegiadoId: userId, // You should define `userId` elsewhere in your script
          mesInicial: formData.get('mesInicial'),
          mesFinal: formData.get('mesFinal'),
          anoInicial: formData.get('anoInicial'),
          anoFinal: formData.get('anoFinal'),
          recibo: formData.get('recibo'),
          talonario: formData.get('talonario'),
          monto: formData.get('monto'),
          observacion: formData.get('observacion')
        };

        // Log the data to the console (or send it via AJAX, etc.)
        console.log(data);
        const result = await fetch('/contributions', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        })
        dialog.close()
        fetchData();
        // Optional: Show error message if any field is invalid
        if (!data.recibo || !data.monto) {
          document.getElementById('error-message').innerText = 'Please fill out all required fields!';
        }
      })
      actualizacionUsuario.addEventListener('sumbit', (e) => {
        e.preventDefault();
        const formData = new FormData(actualizacionUsuario);
        const data = {
          matricula: formData.get('matricula'),
          matriculaConalab: formData.get('matriculaConalab'),
          nombres: formData.get('nombres'),
          paterno: formData.get('paterno'),
          materno: formData.get('materno'),
          telefonoOficina: formData.get('telefonoOficina'),
          direccionOficina: formData.get('direccionOficina'),
          correo: formData.get('correo'),
          lugarNacimiento: formData.get('lugarNacimiento'),
          fechaNacimiento: formData.get('fechaNacimiento'),
          numeroCI: formData.get('numeroCI'),
          numeroRuc: formData.get('numeroRuc'),
          estadoCivil: formData.get('estadoCivil'),
          universidad: formData.get('universidad'),
          fechaTesis: formData.get('fechaTesis'),
          universidadLicenciatura: formData.get('universidadLicenciatura'),
          fechaLicenciatura: formData.get('fechaLicenciatura'),
          fechaProvisionNacional: formData.get('fechaProvisionNacional'),
          entidadProvisionNacional: formData.get('entidadProvisionNacional'),
          fechaMatriculacionAlColegio: formData.get('fechaMatriculacionAlColegio'),
          cargosAdministracionPublica: formData.get('cargosAdministracionPublica'),
          cargosEmpresaPrivada: formData.get('cargosEmpresaPrivada'),
          cargosBufete: formData.get('cargosBufete'),
          cargoActual: formData.get('cargoActual'),
          especialidadPrimaria: formData.get('especialidadPrimaria'),
          especialidadSecundaria: formData.get('especialidadSecundaria'),
          producciones: formData.get('producciones'),
          catedra: formData.get('catedra'),
          estudiosEspecializacion: formData.get('estudiosEspecializacion'),
          reconocimientos: formData.get('reconocimientos'),
          asistenciaEventosInternacionales: formData.get('asistenciaEventosInternacionales'),
          institucionAsegurado: formData.get('institucionAsegurado'),
          beneficiarios: formData.get('beneficiarios'),
          direccionDomicilio: formData.get('direccionDomicilio'),
          telefonoDomicilio: formData.get('telefonoDomicilio'),
          casilla: formData.get('casilla'),
        }
      })
      // Actualizar los aportes de un usuario
      const handleUserAporteUpdate = async (AporteId) => {
        dialogAportes.showModal();
        formAporte.onsubmit = async (e) => {
          e.preventDefault();
          try {
            const response = await fetch(`/contributions/${AporteId}/delete`, {
              method: 'PATCH',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                motivo: motivoText.value
              })
            });

            const data = await response.json();

            if (response.ok & data.affectedRows > 0) {
              fetchData();
              dialogAportes.close();
            } else {
              alert("Nose al actualizar el aporte: " + (data.message || 'Intenta de nuevo.'));
              dialogAportes.close();
            }
          } catch (error) {
            console.error("Error al actualizar el aporte:", error);
            alert("Hubo un error al actualizar el aporte. Intenta de nuevo.");
          }
        };
      };
      // Función para enviar la solicitud POST
      async function enviarAgenda(url, userId) {
        try {
          const res = await fetch(`/notas/${url}/${userId}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
          });

          if (!res.ok) {
            throw new Error('Hubo un problema con la entrega.');
          }
          fetchNotas();
          alert(`¡La ${url} ha sido entregada correctamente!`);
        } catch (error) {
          console.error('Error al enviar la solicitud:', error);
          alert('Ocurrió un error. Intenta nuevamente.');
        }
      }

      // Agregar event listener para la agenda de entrega
      agendaEntrega.addEventListener('click', async (e) => {
        e.preventDefault();
        console.log(userId);

        const register = confirm('¿Estás seguro de entregar la agenda?');
        if (!register) return;
        await enviarAgenda('agenda', userId);
      });

      // Agregar event listener para el diplomado gratuito
      diplomadoGratuito.addEventListener('click', async (e) => {
        e.preventDefault();
        const register = confirm('¿Estás seguro de entregar el diplomado gratuito?');
        if (!register) return;
        await enviarAgenda('diplomado', userId);
      });

      $("#openDialogButton").addEventListener("click", function () {
        $("#personalDataDialog").showModal();
      });

      $("#closeDialogButton").addEventListener("click", function () {
        $("#personalDataDialog").close();
      });
      cancelarAporte.addEventListener('click', () => dialogAportes.close());
      button.addEventListener('click', () => dialog.showModal());
      function closeModal() {
        update.close(); // Cierra el modal
      }
      function closeDialog() {
        dialog.close();
      }

      function calcularMeses() {
        const mesIni = parseInt(mesInicial.value);
        const anoIni = parseInt(anoInicial.value);
        const mesFin = parseInt(mesFinal.value);
        const anoFin = parseInt(anoFinal.value);

        // Validación de fecha inicial no mayor a la fecha final
        const fechaIni = new Date(anoIni, mesIni - 1, 1); // El mes es 0-based en JavaScript
        const fechaFin = new Date(anoFin, mesFin - 1, 1);

        if (fechaIni > fechaFin) {
          alert("La fecha inicial no puede ser mayor a la fecha final.");
          return;
        }

        // Calcular la diferencia en meses
        const diffMeses = (anoFin - anoIni) * 12 + (mesFin - mesIni) + 1;

        // Asegurarse de que no sea un valor negativo
        inputMeses.value = diffMeses >= 0 ? diffMeses : 0;
        $("#monto").value = diffMeses * 20;
      }
      // Asignar eventos de cambio a los selects
      mesInicial.addEventListener('change', sincronizarFechas, calcularMeses);
      anoInicial.addEventListener('change', sincronizarFechas, calcularMeses);
      mesFinal.addEventListener('change', calcularMeses);
      anoFinal.addEventListener('change', calcularMeses);

      // Llamar a la función al cargar para calcular de inmediato con las opciones por defecto
      function sincronizarFechas() {
        const mesIni = parseInt(mesInicial.value);
        const anoIni = parseInt(anoInicial.value);
        const mesFin = parseInt(mesFinal.value);
        const anoFin = parseInt(anoFinal.value);

        // Sincronizar el año y mes final con los valores seleccionados en inicial
        if (anoIni > anoFin || (anoIni === anoFin && mesIni > mesFin)) {
          anoFinal.value = anoIni;
          mesFinal.value = mesIni;
        }
        if (anoIni > anoFin || (anoIni === anoFin && mesIni > mesFin)) {
          anoIni.value = anoFin;
          mesIni.value = mesFin;
        }
        // Llamar a la función para recalcular los meses
        calcularMeses();
      }
      // Inicializar la carga de los datos
      fetchData();
      fetchNotas();
    });
  </script>

  <%- include('../partials/footer',{user}) %>